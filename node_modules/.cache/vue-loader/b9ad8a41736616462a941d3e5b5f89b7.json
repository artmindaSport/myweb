{"remainingRequest":"/Users/dashuaige/artminda/myweb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dashuaige/artminda/myweb/src/views/BlogPost.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dashuaige/artminda/myweb/src/views/BlogPost.vue","mtime":1593338198551},{"path":"/Users/dashuaige/artminda/myweb/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/dashuaige/artminda/myweb/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/Users/dashuaige/artminda/myweb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dashuaige/artminda/myweb/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport marked from \"marked\";\nimport StoryblokClient from \"storyblok-js-client\";\nconst token = \"mUT1Vr0FJ9aOLrdlHaMSbQtt\";\nlet storyapi = new StoryblokClient({\n  accessToken: token\n});\n\nexport default {\n  data() {\n    return {\n      posts: [],\n      result: {}\n    };\n  },\n  metaInfo() {\n    return {\n      title: this.result.title,\n      titleTemplate: \"%s ← artminda's Blog\",\n      meta: [\n        { name: \"viewport\", content: \"width=device-width, initial-scale=1\" },\n        {\n          name: \"description\",\n          content: this.result.content\n        },\n        { charset: \"utf-8\" },\n        { property: \"og:title\", content: \"artminda' web\" },\n        { property: \"og:site_name\", content: \"artminda' web\" },\n        { property: \"og:type\", content: \"website\" },\n        { property: \"og:url\", content: \"https://artminda.github.io/artminda/\" },\n        {\n          property: \"og:image\",\n          content: \"https://i.imgur.com/Dcz2PGx.jpg\"\n        },\n        {\n          property: \"og:description\",\n          content: this.result.content\n        }\n      ]\n    };\n  },\n  computed: {\n    body() {\n      if (this.result.content){\n        return marked(this.result.content);\n      }\n        return ''\n    }\n  },\n\n  created() {\n    window.storyblok.init({\n      accessToken: token\n    });\n    window.storyblok.on(\"change\", () => {\n      this.getStory(\"article\", \"draft\");\n    });\n    window.storyblok.pingEditor(() => {\n      if (window.storyblok.isInEditor()) {\n        this.getStory(\"article\", \"draft\");\n      } else {\n        this.getStory(\"article\", \"published\");\n      }\n    });\n  },\n\n  methods: {\n    getStory(version) {\n      storyapi\n        .get(\"cdn/stories\", {\n          version: \"draft\",\n          starts_with: \"article/\"\n        })\n        .then(res => {\n          this.posts = res.data.stories.map(bp => {\n            return {\n              id: bp.slug,\n              title: bp.content.title,\n              blok: bp.content,\n              image: bp.content.teaser_image,\n              content: bp.content.long_text,\n              date: bp.content.date\n            };\n          });\n          console.log('this.posts:',this.posts)\n          this.result = this.posts.find(\n            rightPost => rightPost.id === this.$route.params.id\n          );\n          console.log('this.result:',this.result)\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  }\n};\n",{"version":3,"sources":["BlogPost.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BlogPost.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-layout column justify-center class=\"mt-4 pt-2\" v-editable=\"result\">\n    <h1 class=\"text-xs-center mb-4 pb-2\">{{result.title}}</h1>\n    <span v-if=\"result && result.date\">{{result.date}}</span>\n    <v-img :src=\"result.image\" aspect-ratio=\"2.75\" height=\"330\" contain :alt=\"result.title\"></v-img>\n    <v-layout column justify-center align-center class=\"mt-4 pt-2\">\n      <p v-html=\"body\"></p>\n    </v-layout>\n    <br>\n    <br>\n    <v-btn large flat to=\"/blog\" class=\"green--text\">\n      <v-icon>arrow_back</v-icon>Back to Blog\n    </v-btn>\n  </v-layout>\n</template>\n\n<script>\nimport marked from \"marked\";\nimport StoryblokClient from \"storyblok-js-client\";\nconst token = \"mUT1Vr0FJ9aOLrdlHaMSbQtt\";\nlet storyapi = new StoryblokClient({\n  accessToken: token\n});\n\nexport default {\n  data() {\n    return {\n      posts: [],\n      result: {}\n    };\n  },\n  metaInfo() {\n    return {\n      title: this.result.title,\n      titleTemplate: \"%s ← artminda's Blog\",\n      meta: [\n        { name: \"viewport\", content: \"width=device-width, initial-scale=1\" },\n        {\n          name: \"description\",\n          content: this.result.content\n        },\n        { charset: \"utf-8\" },\n        { property: \"og:title\", content: \"artminda' web\" },\n        { property: \"og:site_name\", content: \"artminda' web\" },\n        { property: \"og:type\", content: \"website\" },\n        { property: \"og:url\", content: \"https://artminda.github.io/artminda/\" },\n        {\n          property: \"og:image\",\n          content: \"https://i.imgur.com/Dcz2PGx.jpg\"\n        },\n        {\n          property: \"og:description\",\n          content: this.result.content\n        }\n      ]\n    };\n  },\n  computed: {\n    body() {\n      if (this.result.content){\n        return marked(this.result.content);\n      }\n        return ''\n    }\n  },\n\n  created() {\n    window.storyblok.init({\n      accessToken: token\n    });\n    window.storyblok.on(\"change\", () => {\n      this.getStory(\"article\", \"draft\");\n    });\n    window.storyblok.pingEditor(() => {\n      if (window.storyblok.isInEditor()) {\n        this.getStory(\"article\", \"draft\");\n      } else {\n        this.getStory(\"article\", \"published\");\n      }\n    });\n  },\n\n  methods: {\n    getStory(version) {\n      storyapi\n        .get(\"cdn/stories\", {\n          version: \"draft\",\n          starts_with: \"article/\"\n        })\n        .then(res => {\n          this.posts = res.data.stories.map(bp => {\n            return {\n              id: bp.slug,\n              title: bp.content.title,\n              blok: bp.content,\n              image: bp.content.teaser_image,\n              content: bp.content.long_text,\n              date: bp.content.date\n            };\n          });\n          console.log('this.posts:',this.posts)\n          this.result = this.posts.find(\n            rightPost => rightPost.id === this.$route.params.id\n          );\n          console.log('this.result:',this.result)\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  }\n};\n</script>\n\n<style scoped>\n</style>"]}]}
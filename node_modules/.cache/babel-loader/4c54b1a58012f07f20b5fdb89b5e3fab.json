{"remainingRequest":"/Users/dashuaige/artminda/myweb/node_modules/babel-loader/lib/index.js!/Users/dashuaige/artminda/myweb/node_modules/vuetify-loader/lib/loader.js!/Users/dashuaige/artminda/myweb/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/dashuaige/artminda/myweb/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dashuaige/artminda/myweb/src/components/hamburger.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dashuaige/artminda/myweb/src/components/hamburger.vue","mtime":1593338198550},{"path":"/Users/dashuaige/artminda/myweb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dashuaige/artminda/myweb/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/dashuaige/artminda/myweb/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/Users/dashuaige/artminda/myweb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dashuaige/artminda/myweb/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: {\n    goDark: {\n      type: Boolean\n    },\n    lang: {\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      isClosed: true,\n      selectLang: localStorage.getItem('lang') === \"tw\" ? \"中文\" : \"English\",\n      items: [\"English\", \"中文\"],\n      drawer: null\n    };\n  },\n  watch: {\n    selectLang: function selectLang(val) {\n      this.$emit(\"changeLang\", val);\n    }\n  },\n  methods: {\n    changeTheme: function changeTheme() {\n      this.$emit(\"changeTheme\", this.goDark);\n    },\n    burgerTime: function burgerTime() {\n      if (this.isClosed === true) {\n        this.isClosed = false;\n        this.$emit(\"menu\", !this.isClosed);\n      } else {\n        this.isClosed = true;\n        this.$emit(\"menu\", !this.isClosed);\n      }\n    }\n  }\n};",{"version":3,"sources":["hamburger.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KADA;AAIA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AAJA,GADA;AASA,EAAA,IATA,kBASA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,IADA;AAEA,MAAA,UAAA,EAAA,YAAA,CAAA,OAAA,CAAA,MAAA,MAAA,IAAA,GAAA,IAAA,GAAA,SAFA;AAGA,MAAA,KAAA,EAAA,CAAA,SAAA,EAAA,IAAA,CAHA;AAIA,MAAA,MAAA,EAAA;AAJA,KAAA;AAMA,GAhBA;AAiBA,EAAA,KAAA,EAAA;AACA,IAAA,UADA,sBACA,GADA,EACA;AACA,WAAA,KAAA,CAAA,YAAA,EAAA,GAAA;AACA;AAHA,GAjBA;AAsBA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,WAAA,KAAA,CAAA,aAAA,EAAA,KAAA,MAAA;AACA,KAHA;AAIA,IAAA,UAJA,wBAIA;AACA,UAAA,KAAA,QAAA,KAAA,IAAA,EAAA;AACA,aAAA,QAAA,GAAA,KAAA;AACA,aAAA,KAAA,CAAA,MAAA,EAAA,CAAA,KAAA,QAAA;AACA,OAHA,MAGA;AACA,aAAA,QAAA,GAAA,IAAA;AACA,aAAA,KAAA,CAAA,MAAA,EAAA,CAAA,KAAA,QAAA;AACA;AACA;AAZA;AAtBA,CAAA","sourcesContent":["<template>\n  <div id=\"hamburger\" @click=\"burgerTime()\" \n  :class=\"{is_closed: isClosed, is_open: !isClosed}\"\n  class=\"hamburglar\">\n    <div class=\"burger-icon\">\n      <div class=\"burger-container\">\n        <span class=\"burger-bun-top\"></span>\n        <span class=\"burger-filling\"></span>\n        <span class=\"burger-bun-bot\"></span>\n      </div>\n    </div>\n\n    <!-- svg ring containter -->\n    <div class=\"burger-ring\">\n      <svg class=\"svg-ring\">\n        <path\n          class=\"path\"\n          fill=\"none\"\n          stroke=\"#4caf50\"\n          stroke-miterlimit=\"10\"\n          stroke-width=\"4\"\n          d=\"M 34 2 C 16.3 2 2 16.3 2 34 s 14.3 32 32 32 s 32 -14.3 32 -32 S 51.7 2 34 2\"\n        />\n      </svg>\n    </div>\n    <!-- the masked path that animates the fill to the ring -->\n\n    <svg width=\"0\" height=\"0\">\n      <mask id=\"mask\">\n        <path\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          stroke=\"#ff0000\"\n          stroke-miterlimit=\"10\"\n          stroke-width=\"4\"\n          d=\"M 34 2 c 11.6 0 21.8 6.2 27.4 15.5 c 2.9 4.8 5 16.5 -9.4 16.5 h -4\"\n        />\n      </mask>\n    </svg>\n    <div class=\"path-burger\">\n      <div class=\"animate-path\">\n        <div class=\"path-rotation\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\nprops: {\n    goDark: {\n      type: Boolean\n    },\n    lang: {\n      type: String\n    }\n  },\ndata() {\n    return {  \n      isClosed: true,\n      selectLang: localStorage.getItem('lang') === \"tw\" ? \"中文\" : \"English\" ,\n      items:[\"English\",\"中文\"],\n      drawer: null\n    }\n},\n watch:{\n    selectLang(val){\n      this.$emit(\"changeLang\", val);\n    }\n},\nmethods: {\n  changeTheme() {\n      this.$emit(\"changeTheme\", this.goDark);\n  },\n  burgerTime(){\n    if (this.isClosed === true) {   \n        this.isClosed = false\n        this.$emit(\"menu\", !this.isClosed)\n      } else {\n        this.isClosed = true\n        this.$emit(\"menu\", !this.isClosed)\n      }\n  }\n}\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.selectWidth {\n  width: 109px;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  -ms-flex-item-align: center;\n  align-self: center;\n}\n// vars\n$color: #4caf50;\t\t  // icon color\n$blue: transparent;\t  // background color\n$animation: 0.6s;\t// animation speed\n$scale: 1;\t\t\t  // icon scale 68/68 default\n\n*, *:before, *:after {\n  box-sizing: border-box;\n }\n\n// spacing + background-color\nbody {\n  background: $blue;\n  padding: 40px;\n}\n\nh4 {\n  font-family: arial,helvetica,serif;\n  color: $color;\n  font-size: 18px;\n  text-align: center;\n  margin: 40px 0 0;\n  \n}\n\n.hamburglar {\n  float: right;\n  transform: scale($scale);\n// margin: 40px auto;\n  position: absolute;\n  z-index: 999;\n  right: 0;\n  margin: 2vh;\n  display: block;\n  width: 68px;\n  height: 68px;\n  background: $blue;\n  -webkit-touch-callout: none;\n  user-select: none;\n  cursor: pointer;\n\n}\n\n// transition mask\n.path-burger {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 68px;\n  width: 68px;\n  // two masks because... browser support.\n  mask: url(#mask);\n  -webkit-mask-box-image: url(https://raygun.io/upload/mask.svg);\n}\n\n.animate-path {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 68px;\n  height: 68px;\n}\n\n// what this does is create a small square that I then rotate behind an svg mask, giving the apparence of the line animating\n.path-rotation {\n  height: 34px;\n  width: 34px;\n  margin: 34px 34px 0 0;\n  transform: rotate(0deg);\n  transform-origin: 100% 0;\n  &:before {\n    content: '';\n    display: block;\n    width: 30px;\n    height: 34px;\n    margin: 0 4px 0 0;\n    background: $color;\n  }\n}\n\n// box rotation animation\n@keyframes rotate-out {\n  0% {\n    transform: rotate(0deg);\n  }\n  40% {\n    transform: rotate(180deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes rotate-in {\n  0% {\n    transform: rotate(360deg);\n  }\n  40% {\n    transform: rotate(180deg);\n  }\n  100% {\n    transform: rotate(0deg);\n  }\n}\n\n// offset moves\n// dasharray is the dash size\n// need to be able to control dash space size.\n\n.hamburglar.is_open {\n  .path {\n    animation: dash-in $animation linear normal;\n    animation-fill-mode:forwards;\n  }\n  .animate-path {\n    animation: rotate-in $animation linear normal;\n    animation-fill-mode:forwards;\n  }\n}\n\n.hamburglar.is_closed {\n  .path {\n    animation: dash-out $animation linear normal;\n    animation-fill-mode:forwards;\n  }\n  .animate-path {\n    animation: rotate-out $animation linear normal;\n    animation-fill-mode:forwards;\n  }\n}\n\n.path {\n  stroke-dasharray: 240;\n  stroke-dashoffset: 240;\n  stroke-linejoin: round;\n}\n\n@keyframes dash-in {\n  0% {\n    stroke-dashoffset: 240;\n  }\n  40% {\n    stroke-dashoffset: 240;\n  }\n  100% {\n    stroke-dashoffset: 0;\n  }\n}\n@keyframes dash-out {\n  0% {\n    stroke-dashoffset: 0;\n  }\n  40% {\n    stroke-dashoffset: 240;\n  }\n  100% {\n    stroke-dashoffset: 240;\n  }\n}\n\n\n\n// All good burgers need filling!\n\n.burger-icon {\n  position: absolute;\n  padding: 20px 16px;\n  height: 68px;\n  width: 68px;\n}\n\n.burger-container {\n  position: relative;\n  height: 28px;\n  width: 36px;\n}\n\n.burger-bun-top,\n.burger-bun-bot,\n.burger-filling {\n  position: absolute;\n  display: block;\n  height: 4px;\n  width: 36px;\n  border-radius: 2px;\n  background: $color;\n}\n\n.burger-bun-top {\n  top: 0;\n  transform-origin: 34px 2px;\n}\n\n.burger-bun-bot {\n  bottom: 0;\n  transform-origin: 34px 2px;\n}\n//.burger-filling {\n//  @include transition(all,($animation/2.5),ease-in-//out);\n//}\n// relative parent is the button\n.burger-filling {\n   top: 10px;\n   height: 8px;\n}\n\n// burger ring container\n.burger-ring {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 68px;\n  height: 68px;\n}\n\n.svg-ring {\n  width: 68px;\n  height: 68px;\n}\n\n\n// bun animations \n.hamburglar.is_open {\n  .burger-bun-top {\n    animation: bun-top-out $animation linear normal;\n    animation-fill-mode:forwards;\n  }\n  .burger-bun-bot {\n    animation: bun-bot-out $animation linear normal;\n    animation-fill-mode:forwards;\n  }\n}\n.hamburglar.is_closed {\n  .burger-bun-top {\n    animation: bun-top-in $animation linear normal;\n    animation-fill-mode:forwards;\n  }\n  .burger-bun-bot {\n    animation: bun-bot-in $animation linear normal;\n    animation-fill-mode:forwards;\n  }\n}\n\n@keyframes bun-top-out {\n  0% {\n    left: 0;\n    top: 0;\n    transform: rotate(0deg);\n  }\n  20% {\n    left: 0;\n    top: 0;\n    transform: rotate(15deg);\n  }\n  80% {\n    left: -5px;\n    top: 0;\n    transform: rotate(-60deg);\n  }\n  100% {\n    left: -5px;\n    top: 1px;\n    transform: rotate(-45deg);\n  }\n}\n\n@keyframes bun-bot-out {\n  0% {\n    left: 0;\n    transform: rotate(0deg);\n  }\n  20% {\n    left: 0;\n    transform: rotate(-15deg);\n  }\n  80% {\n    left: -5px;\n    transform: rotate(60deg);\n  }\n  100% {\n    left: -5px;\n    transform: rotate(45deg);\n  }\n}\n\n\n@keyframes bun-top-in {\n  0% {\n    left: -5px;\n    bot: 0;\n    transform: rotate(-45deg);\n  }\n  20% {\n    left: -5px;\n    bot: 0;\n    transform: rotate(-60deg);\n  }\n  80% {\n    left: 0;\n    bot: 0;\n    transform: rotate(15deg);\n  }\n  100% {\n    left: 0;\n    bot: 1px;\n    transform: rotate(0deg);\n  }\n}\n\n@keyframes bun-bot-in {\n  0% {\n    left: -5px;\n    transform: rotate(45deg);\n  }\n  20% {\n    left: -5px;\n    bot: 0;\n    transform: rotate(60deg);\n  }\n  80% {\n    left: 0;\n    bot: 0;\n    transform: rotate(-15deg);\n  }\n  100% {\n    left: 0;\n    transform: rotate(0deg);\n  }\n}\n\n\n// burger filling\n.hamburglar.is_open {\n  .burger-filling {\n    animation: burger-fill-out $animation linear normal;\n    animation-fill-mode:forwards;\n  }\n}\n\n.hamburglar.is_closed {\n  .burger-filling {\n    animation: burger-fill-in $animation linear normal;\n    animation-fill-mode:forwards;\n  }\n}\n\n@keyframes burger-fill-in {\n  0% {\n    width: 0;\n    left: 36px;\n  }\n  40% {\n    width: 0;\n    left: 40px;\n  }\n  80% {\n    width: 36px;\n    left: -6px;\n  }\n  100% {\n    width: 36px;\n    left: 0px;\n  }\n}\n\n@keyframes burger-fill-out {\n  0% {\n    width: 36px;\n    left: 0px;\n  }\n  20% {\n    width: 42px;\n    left: -6px;\n  }\n\n  40% {\n    width: 0;\n    left: 40px;\n  }\n\n  100% {\n    width: 0;\n    left: 36px;\n  }\n}\n</style>"],"sourceRoot":"src/components"}]}
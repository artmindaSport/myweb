{"remainingRequest":"/Users/dashuaige/artminda/artminda/node_modules/thread-loader/dist/cjs.js!/Users/dashuaige/artminda/artminda/node_modules/babel-loader/lib/index.js!/Users/dashuaige/artminda/artminda/node_modules/vuetify-loader/lib/loader.js!/Users/dashuaige/artminda/artminda/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/dashuaige/artminda/artminda/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dashuaige/artminda/artminda/src/views/BlogPost.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/dashuaige/artminda/artminda/src/views/BlogPost.vue","mtime":1593338198551},{"path":"/Users/dashuaige/artminda/artminda/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dashuaige/artminda/artminda/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dashuaige/artminda/artminda/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/dashuaige/artminda/artminda/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/Users/dashuaige/artminda/artminda/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/dashuaige/artminda/artminda/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport marked from \"marked\";\nimport StoryblokClient from \"storyblok-js-client\";\nvar token = \"mUT1Vr0FJ9aOLrdlHaMSbQtt\";\nvar storyapi = new StoryblokClient({\n  accessToken: token\n});\nexport default {\n  data: function data() {\n    return {\n      posts: [],\n      result: {}\n    };\n  },\n  metaInfo: function metaInfo() {\n    return {\n      title: this.result.title,\n      titleTemplate: \"%s ← artminda's Blog\",\n      meta: [{\n        name: \"viewport\",\n        content: \"width=device-width, initial-scale=1\"\n      }, {\n        name: \"description\",\n        content: this.result.content\n      }, {\n        charset: \"utf-8\"\n      }, {\n        property: \"og:title\",\n        content: \"artminda' web\"\n      }, {\n        property: \"og:site_name\",\n        content: \"artminda' web\"\n      }, {\n        property: \"og:type\",\n        content: \"website\"\n      }, {\n        property: \"og:url\",\n        content: \"https://artminda.github.io/artminda/\"\n      }, {\n        property: \"og:image\",\n        content: \"https://i.imgur.com/Dcz2PGx.jpg\"\n      }, {\n        property: \"og:description\",\n        content: this.result.content\n      }]\n    };\n  },\n  computed: {\n    body: function body() {\n      if (this.result.content) {\n        return marked(this.result.content);\n      }\n\n      return '';\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    window.storyblok.init({\n      accessToken: token\n    });\n    window.storyblok.on(\"change\", function () {\n      _this.getStory(\"article\", \"draft\");\n    });\n    window.storyblok.pingEditor(function () {\n      if (window.storyblok.isInEditor()) {\n        _this.getStory(\"article\", \"draft\");\n      } else {\n        _this.getStory(\"article\", \"published\");\n      }\n    });\n  },\n  methods: {\n    getStory: function getStory(version) {\n      var _this2 = this;\n\n      storyapi.get(\"cdn/stories\", {\n        version: \"draft\",\n        starts_with: \"article/\"\n      }).then(function (res) {\n        _this2.posts = res.data.stories.map(function (bp) {\n          return {\n            id: bp.slug,\n            title: bp.content.title,\n            blok: bp.content,\n            image: bp.content.teaser_image,\n            content: bp.content.long_text,\n            date: bp.content.date\n          };\n        });\n        console.log('this.posts:', _this2.posts);\n        _this2.result = _this2.posts.find(function (rightPost) {\n          return rightPost.id === _this2.$route.params.id;\n        });\n        console.log('this.result:', _this2.result);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }\n};",{"version":3,"sources":["BlogPost.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-layout column justify-center class=\"mt-4 pt-2\" v-editable=\"result\">\n    <h1 class=\"text-xs-center mb-4 pb-2\">{{result.title}}</h1>\n    <span v-if=\"result && result.date\">{{result.date}}</span>\n    <v-img :src=\"result.image\" aspect-ratio=\"2.75\" height=\"330\" contain :alt=\"result.title\"></v-img>\n    <v-layout column justify-center align-center class=\"mt-4 pt-2\">\n      <p v-html=\"body\"></p>\n    </v-layout>\n    <br>\n    <br>\n    <v-btn large flat to=\"/blog\" class=\"green--text\">\n      <v-icon>arrow_back</v-icon>Back to Blog\n    </v-btn>\n  </v-layout>\n</template>\n\n<script>\nimport marked from \"marked\";\nimport StoryblokClient from \"storyblok-js-client\";\nconst token = \"mUT1Vr0FJ9aOLrdlHaMSbQtt\";\nlet storyapi = new StoryblokClient({\n  accessToken: token\n});\n\nexport default {\n  data() {\n    return {\n      posts: [],\n      result: {}\n    };\n  },\n  metaInfo() {\n    return {\n      title: this.result.title,\n      titleTemplate: \"%s ← artminda's Blog\",\n      meta: [\n        { name: \"viewport\", content: \"width=device-width, initial-scale=1\" },\n        {\n          name: \"description\",\n          content: this.result.content\n        },\n        { charset: \"utf-8\" },\n        { property: \"og:title\", content: \"artminda' web\" },\n        { property: \"og:site_name\", content: \"artminda' web\" },\n        { property: \"og:type\", content: \"website\" },\n        { property: \"og:url\", content: \"https://artminda.github.io/artminda/\" },\n        {\n          property: \"og:image\",\n          content: \"https://i.imgur.com/Dcz2PGx.jpg\"\n        },\n        {\n          property: \"og:description\",\n          content: this.result.content\n        }\n      ]\n    };\n  },\n  computed: {\n    body() {\n      if (this.result.content){\n        return marked(this.result.content);\n      }\n        return ''\n    }\n  },\n\n  created() {\n    window.storyblok.init({\n      accessToken: token\n    });\n    window.storyblok.on(\"change\", () => {\n      this.getStory(\"article\", \"draft\");\n    });\n    window.storyblok.pingEditor(() => {\n      if (window.storyblok.isInEditor()) {\n        this.getStory(\"article\", \"draft\");\n      } else {\n        this.getStory(\"article\", \"published\");\n      }\n    });\n  },\n\n  methods: {\n    getStory(version) {\n      storyapi\n        .get(\"cdn/stories\", {\n          version: \"draft\",\n          starts_with: \"article/\"\n        })\n        .then(res => {\n          this.posts = res.data.stories.map(bp => {\n            return {\n              id: bp.slug,\n              title: bp.content.title,\n              blok: bp.content,\n              image: bp.content.teaser_image,\n              content: bp.content.long_text,\n              date: bp.content.date\n            };\n          });\n          console.log('this.posts:',this.posts)\n          this.result = this.posts.find(\n            rightPost => rightPost.id === this.$route.params.id\n          );\n          console.log('this.result:',this.result)\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  }\n};\n</script>\n\n<style scoped>\n</style>"],"sourceRoot":"src/views"}]}